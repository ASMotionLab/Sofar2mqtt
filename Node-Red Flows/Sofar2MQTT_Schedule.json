[{"id":"d24df855.a61cd8","type":"tab","label":"Sofar2MQTT Schedule","disabled":false,"info":"Example of a simple charge schedules for smart time of use charging."},{"id":"4f942ade.222b44","type":"mqtt out","z":"d24df855.a61cd8","name":"sofar","topic":"","qos":"2","retain":"","broker":"f1cb6c58.281ab","x":810,"y":60,"wires":[]},{"id":"937a68ee.8945c8","type":"inject","z":"d24df855.a61cd8","name":"10secs","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"10","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":60,"wires":[["1541bf64.164c71"]]},{"id":"1541bf64.164c71","type":"function","z":"d24df855.a61cd8","name":"chargeTarget","func":"// How much energy to take from the grid, based on the expected solar energy tomorrow.\n// Global variable \"predictedSolarTomorrow\" is set using data from openweathermap.com.\n// If you don't have solar, just don't set the variable and it will be zero.\n\nvar solarKwh = global.get(\"predictedSolarTomorrow\");\nif (!solarKwh)\n    solarKwh=0\n\n// Allow for 5kWh daytime consumption (yours may be higher/lower)\nvar daytimeConsumption = 5;\nsolarKwh = Math.max(solarKwh-daytimeConsumption,0); \nvar batteryCapacityKwh = 9.6; //kWh\n\n// What percentage of the battery's full capacity will be provided by solar tomorrow?\nvar solarTomorrow = (solarKwh/batteryCapacityKwh)*100;\n// Therefore, how much should we take from the grid tonight?\nvar chargeTarget = parseInt(100-solarTomorrow);\n\n// If you just want to specify your own charge target, you can overide it here.\n// For instance, to charge the battery t0 85%, uncomment the next line.\n//chargeTarget=85;\n\nmsg.payload=chargeTarget;\n\nnode.status({fill:\"yellow\", shape:\"ring\", text:chargeTarget+\"%\"})\nsetTimeout(() => { node.status({}); }, 3000);\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":60,"wires":[["5ddcbd67.74d744","aa290320.079db","ee6c18c2.d15058"]]},{"id":"5ddcbd67.74d744","type":"function","z":"d24df855.a61cd8","name":"2am-5am - Charge","func":"var chargeTarget = parseInt(msg.payload);\nvar batterySOC = global.get(\"sofarBatterySOC\");\n//calculate timezone offset in milliseconds\nvar tzoffset = (new Date()).getTimezoneOffset() * 60000; \nvar localISOTime = (new Date(Date.now() - tzoffset));\nif (localISOTime.getHours() >= 2 && localISOTime.getHours() < 5)\n{\n    if (batterySOC < chargeTarget)\n    {\n        msg.topic=\"sofar/set/charge\";\n        msg.payload=3000;\n        node.status({fill:\"green\", shape:\"dot\", text:\"charge\"})\n    }\n    else\n    {\n        msg.topic=\"sofar/set/standby\";\n        msg.payload=true;\n        node.status({fill:\"yellow\", shape:\"ring\", text:\"standby\"})\n    }\n    setTimeout(() => { node.status({}); }, 3000);\n    return msg\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":550,"y":60,"wires":[["4f942ade.222b44"]]},{"id":"aa290320.079db","type":"function","z":"d24df855.a61cd8","name":"5am-2pm - Save","func":"\nbatteryPercent = parseInt(msg.payload);\n//calculate timezone offset in milliseconds\nvar tzoffset = (new Date()).getTimezoneOffset() * 60000; \nvar localISOTime = (new Date(Date.now() - tzoffset));\nif (localISOTime.getHours() >= 5 && localISOTime.getHours() < 14)\n{\n    msg.topic=\"sofar/set/auto\";\n    msg.payload=\"battery_save\";\n    node.status({fill:\"green\", shape:\"dot\", text:msg.payload})\n    setTimeout(() => { node.status({}); }, 3000);\n    return msg\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":540,"y":120,"wires":[["4f942ade.222b44"]]},{"id":"ee6c18c2.d15058","type":"function","z":"d24df855.a61cd8","name":"2pm-2am - Auto","func":"batteryPercent = parseInt(msg.payload);\n//calculate timezone offset in milliseconds\nvar tzoffset = (new Date()).getTimezoneOffset() * 60000; \nvar localISOTime = (new Date(Date.now() - tzoffset));\nif (localISOTime.getHours() < 2 || localISOTime.getHours() >= 14)\n{\n    msg.topic=\"sofar/set/auto\";\n    msg.payload=true;\n    node.status({fill:\"green\", shape:\"dot\", text:\"auto\"})\n    setTimeout(() => { node.status({}); }, 3000);\n    return msg\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":540,"y":180,"wires":[["4f942ade.222b44"]]},{"id":"f1cb6c58.281ab","type":"mqtt-broker","name":"MQTT Broker","broker":"mqtt.home","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]